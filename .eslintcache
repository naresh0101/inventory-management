[{"/home/naresh0101/Desktop/learning/inventory-management/src/index.js":"1","/home/naresh0101/Desktop/learning/inventory-management/src/reportWebVitals.js":"2","/home/naresh0101/Desktop/learning/inventory-management/src/routes.js":"3","/home/naresh0101/Desktop/learning/inventory-management/src/pages/dashboard/dashboard.js":"4","/home/naresh0101/Desktop/learning/inventory-management/src/components/layout_materialui/materialLayout.js":"5","/home/naresh0101/Desktop/learning/inventory-management/src/pages/products.js":"6","/home/naresh0101/Desktop/learning/inventory-management/src/hoc/dashboardLayout.js":"7","/home/naresh0101/Desktop/learning/inventory-management/src/components/eachProduct.js":"8","/home/naresh0101/Desktop/learning/inventory-management/src/components/userAvatar.js":"9","/home/naresh0101/Desktop/learning/inventory-management/src/pages/home.js":"10","/home/naresh0101/Desktop/learning/inventory-management/src/components/hamburger.js":"11","/home/naresh0101/Desktop/learning/inventory-management/src/components/modal/index.js":"12","/home/naresh0101/Desktop/learning/inventory-management/src/components/fields/inputfield.js":"13","/home/naresh0101/Desktop/learning/inventory-management/src/components/alert.js":"14","/home/naresh0101/Desktop/learning/inventory-management/src/components/pageHeader.js":"15","/home/naresh0101/Desktop/learning/inventory-management/src/components/search.js":"16"},{"size":298,"mtime":1613385445963,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611400246239,"results":"19","hashOfConfig":"18"},{"size":473,"mtime":1611410099089,"results":"20","hashOfConfig":"18"},{"size":496,"mtime":1613385205395,"results":"21","hashOfConfig":"18"},{"size":552,"mtime":1611410232158,"results":"22","hashOfConfig":"18"},{"size":3048,"mtime":1613389051528,"results":"23","hashOfConfig":"18"},{"size":13221,"mtime":1613373737031,"results":"24","hashOfConfig":"18"},{"size":2328,"mtime":1613388841101,"results":"25","hashOfConfig":"18"},{"size":1384,"mtime":1611409041817,"results":"26","hashOfConfig":"18"},{"size":608,"mtime":1613326500683,"results":"27","hashOfConfig":"18"},{"size":2278,"mtime":1613380098630,"results":"28","hashOfConfig":"18"},{"size":5802,"mtime":1613382864978,"results":"29","hashOfConfig":"18"},{"size":1284,"mtime":1613339188714,"results":"30","hashOfConfig":"18"},{"size":0,"mtime":1613341308310,"results":"31","hashOfConfig":"18"},{"size":2785,"mtime":1613378963914,"results":"32","hashOfConfig":"18"},{"size":1312,"mtime":1613377500356,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1dvej8g",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"/home/naresh0101/Desktop/learning/inventory-management/src/index.js",[],["74","75"],"/home/naresh0101/Desktop/learning/inventory-management/src/reportWebVitals.js",[],"/home/naresh0101/Desktop/learning/inventory-management/src/routes.js",[],"/home/naresh0101/Desktop/learning/inventory-management/src/pages/dashboard/dashboard.js",[],"/home/naresh0101/Desktop/learning/inventory-management/src/components/layout_materialui/materialLayout.js",[],"/home/naresh0101/Desktop/learning/inventory-management/src/pages/products.js",["76","77","78","79"],"/home/naresh0101/Desktop/learning/inventory-management/src/hoc/dashboardLayout.js",["80","81","82"],"\nimport React, { useEffect, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\nimport { Avatar } from \"@material-ui/core\"\nimport { useHistory } from 'react-router-dom';\nimport { useMediaQuery } from \"@material-ui/core\";\n// icons\nimport LocalOfferOutlinedIcon from '@material-ui/icons/LocalOfferOutlined';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\n\n// components\n\nconst drawerWidth = 250;\n\nconst colorList = [\n  \"#DD66F2\", \"#FEBA69\", \"#FF7F7C\", \"#855CF8\",\n  \"#7CE25E\", \"#5A5E70\", \"#69ACFE\", \"#00FFFF\",\n  \"#C0C0C0\", \"#40E0D0\", \"#191970\", \"#FFE4C4\", \"#000000\",\n  \"#E6E6FA\", \"#BC8F8F\", \"#F4A460\", \"#D2691E\", \"#800080\",\n  \"#1E90FF\", \"#FF0000\", \"#FF8C00\"\n]\nlet index = colorList.length - 1;\nconst colorIndx = Math.floor(Math.random() * index);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    overflow: \"hidden\",\n  },\n  divider: {\n    background: \"#ECEEF4\",\n    border: \"2px solid #ECEEF4\",\n  },\n  appBar: {\n    paddingLeft: \"14px\",\n    paddingRight: \"14px\",\n    display:\"flex\",\n    justifyContent:\"flex-start\",\n    backgroundColor: \"#F2F2F2\",\n    boxShadow: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: `${drawerWidth}`,\n    },\n  },\n  menuButton: {\n    border: \"2px solid #fffff\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  drawerPaper: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    overflow: \"hidden\",\n  },\n  menutitle: {\n    height: 20,\n    overflow: \"hidden\"\n  },\n  dividerstyle: {\n    marginTop: \"0.8rem\",\n    marginBottom: \"0.8rem\",\n    background: \"#ECEEF4\",\n    border: \"1px solid #ECEEF4\",\n  },\n  content: {\n    flexGrow: 1,\n  },\n  innertoolbar: {\n    display: \"flex\",\n    paddingLeft: \"0px\",\n    paddingRight: \"0px\",\n    justifyContent: \"flex-end\",\n    [theme.breakpoints.up(\"md\")]: {\n      marginRight: \"30px\"\n    },\n  },\n  icons: {\n    backgroundColor: \"#fff\",\n    marginLeft: \"15px\",\n    width: \"30px\",\n    height: \"30px\",\n  },\n  paddingNone: {\n    paddingTop: 1,\n    width: \"100%\",\n    paddingBottom: 1\n  },\n  navbar: {\n    textDecoration: \"none\",\n    color: \"#5A5E70\",\n    fontFamily: 'Roboto',\n    marginTop: \"10px\",\n    marginBottom: \"10px\"\n  },\n  shadow: {\n    boxShadow: \"0px 0px 14px rgba(0, 0, 0, 0.1)\",\n  },\n  menutext: {\n    color: \"#000000\",\n    fontSize: \"0.9rem\",\n    fontWeight: 400\n  },\n  makeActive: {\n      backgroundColor: \"rgba(103, 123, 242, 0.05)\",\n      borderLeft: \"2px solid #677BF2\",\n      color: \"#677BF2\"\n  },\n  logo: {\n    fill: \"none\",\n    width: \"100px\",\n    height: 19\n  },\n  mainLogo: {\n    fill: \"none\",\n    width: \"100px\",\n    height: 19\n  },\n  pageTitle: {\n    color: \"#000000\",\n    fontWeight: \"bolder\",\n    fontSize: \"22px\"\n  },\n  profileDropdown: {\n    width: \"176px\",\n    borderRadius: '10px',\n    marginTop: \"10px\"\n  }\n}));\n\nconst DashboardLayout = (props) => {\n  const { window } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [OpenDefaultWith, setOpenDefaultWith] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null);\n  const NotMobileView = useMediaQuery(\"(min-width:768px)\")\n  const isCancelled = React.useRef(false);\n  const [active,setActive] = useState(1)\n\n  const activepage = (activeid)=>{\n    setActive(activeid)\n  }\n  const handleClick = (event) => {\n    setMobileOpen(false);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = () => {\n    localStorage.clear();\n  }\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  useEffect(() => {\n    return () => {\n      isCancelled.current = true;\n    };\n  }, []);\n\n\n\n  const handleMouseOver = () => {\n    setOpenDefaultWith(true)\n  }\n  const handleMouseOut = () => {\n    setOpenDefaultWith(false)\n  }\n  const drawer = (\n    <div>\n      <React.Fragment >\n        <ListItem button>\n          <Typography variant=\"h6\">inventory</Typography>\n          <ListItemText className={classes.menutitle}> Product</ListItemText>\n        </ListItem>\n        <List className={classes.paddingNone} >\n          <NavLink\n            onClick={handleDrawerToggle}\n            to={'/'}\n            className={classes.navbar}\n            activeClassName={classes.activeBar}\n          >\n            <ListItem button onClick={()=>{activepage(1)}} className={active === 1 ? classes.makeActive:null}>\n              <ListItemIcon style={{ minWidth: \"2rem\" }}>\n                <HomeOutlinedIcon fontSize=\"small\"/>\n              </ListItemIcon>\n              <ListItemText className={classes.menutitle}>Home</ListItemText>\n            </ListItem>\n          </NavLink>\n        </List>\n        <List className={classes.paddingNone} >\n          <NavLink\n            onClick={handleDrawerToggle}\n            to={'/products'}\n            className={classes.navbar}\n            activeClassName={classes.activeBar}\n          >\n            <ListItem button onClick={()=>{activepage(2)}} className={active === 2 ? classes.makeActive:null}>\n              <ListItemIcon style={{ minWidth: \"2rem\" }}>\n                <LocalOfferOutlinedIcon fontSize=\"small\"/>\n              </ListItemIcon>\n              <ListItemText className={classes.menutitle}> Products</ListItemText>\n            </ListItem>\n          </NavLink>\n        </List>\n        <List className={classes.paddingNone} >\n          <NavLink\n            onClick={handleDrawerToggle}\n            to={'/profile'}\n            className={classes.navbar}\n            activeClassName={classes.activeBar}\n          >\n            <ListItem button onClick={()=>{activepage(3)}} className={active === 3 ? classes.makeActive:null}>\n              <ListItemIcon style={{ minWidth: \"2rem\" }}>\n                <PersonOutlineOutlinedIcon fontSize=\"small\"/>\n              </ListItemIcon>\n              <ListItemText className={classes.menutitle}> Profile</ListItemText>\n            </ListItem>\n          </NavLink>\n        </List>\n      </React.Fragment>\n    </div>\n  );\n\n  const MobileAppbar = () => {\n    return (\n      <AppBar position=\"fixed\" className={classes.appBar} style={{ background: \"white\", zIndex: 1301 }}>\n        <Toolbar className={classes.innertoolbar}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton} >\n            {!mobileOpen ? <MenuIcon style={{ color: \"#5A5E70\" }} /> : <CloseIcon style={{ color: \"#5A5E70\" }} />}\n          </IconButton>\n          <Typography variant=\"h5\" className={classes.pageTitle}>{\"activePage\"}</Typography>\n\n          <div>\n            <IconButton className={classes.icons} onClick={handleClick}>\n              <Avatar src={\"\"} style={{ width: \"30px\", height: \"30px\", backgroundColor: colorList[colorIndx], textTransform: \"capitalize\" }}\n                alt={\"Naresh\"}  >N</Avatar>\n            </IconButton>\n\n            <Menu\n              className={classes.shadow}\n              anchorEl={anchorEl}\n              keepMounted\n              style={{ boxShadow: \"none\", marginTop: !NotMobileView && '2.4rem' }}\n              classes={{ paper: classes.profileDropdown }}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              elevation={0}\n              getContentAnchorEl={null}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n            >\n              <MenuItem\n                className={classes.menutext}\n                component=\"a\" href=\"#/dashboard/profile\"\n                onClick={handleClose}>Profile</MenuItem>\n              <MenuItem\n                className={classes.menutext}\n                component=\"a\" href=\"#/dashboard/settings\"\n                onClick={handleClose}>Account Settings</MenuItem>\n              <Divider variant=\"middle\" className={classes.dividerstyle} />\n              <MenuItem\n                className={classes.menutext}\n                onClick={logout}>Logout</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <React.Fragment>\n        <CssBaseline />\n        {\n          !NotMobileView ?\n            <MobileAppbar /> :\n            <AppBar position=\"fixed\" className={classes.appBar}>\n              <Toolbar className={classes.innertoolbar}>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={handleDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n                {/* <SearchField /> */}\n                <div>\n                  <IconButton className={classes.icons} onClick={handleClick}>\n                    <Avatar src={\"\"} style={{ width: \"30px\", height: \"30px\", backgroundColor: colorList[colorIndx], textTransform: \"capitalize\" }}\n                      alt={\"Naresh\"}   >N</Avatar>\n                  </IconButton>\n                  <Menu\n                    className={classes.shadow}\n                    anchorEl={anchorEl}\n                    keepMounted\n                    classes={{ paper: classes.profileDropdown }}\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                    elevation={0}\n                    getContentAnchorEl={null}\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'center',\n                    }}\n                  >\n                    <MenuItem\n                      className={classes.menutext}\n                      component=\"a\" href=\"#/dashboard/profile\"\n                      onClick={handleClose}>Profile</MenuItem>\n                    <MenuItem\n                      className={classes.menutext}\n                      component=\"a\" href=\"#/dashboard/settings\"\n                      onClick={handleClose}>Account Settings</MenuItem>\n                    <Divider variant=\"middle\" className={classes.dividerstyle} />\n                    <MenuItem\n                      className={classes.menutext}\n                      onClick={logout}>Logout</MenuItem>\n                  </Menu>\n                </div>\n              </Toolbar>\n            </AppBar>\n        }\n        <nav className={classes.drawer} aria-label=\"mailbox folders\" onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\n          <Hidden smUp implementation=\"css\">\n            {\n              !NotMobileView && // if mobile view \n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={'left'}\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                {drawer}\n              </Drawer>\n            }\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main\n          style={{ marginTop: NotMobileView ? \"4.8rem\" : \"3rem\" }}\n          className={classes.content}>\n          {props.children}\n          \n        </main>\n      </React.Fragment>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","/home/naresh0101/Desktop/learning/inventory-management/src/components/eachProduct.js",[],"/home/naresh0101/Desktop/learning/inventory-management/src/components/userAvatar.js",[],["83","84"],"/home/naresh0101/Desktop/learning/inventory-management/src/pages/home.js",[],"/home/naresh0101/Desktop/learning/inventory-management/src/components/hamburger.js",["85"],"import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst useStyles = makeStyles(theme => ({\n    menuI : {\n     width:'100%',\n     margin:2,\n     marginRight:\"12px\",\n     textAlign: \"center\",\n     margin: '0 auto'\n    },\n    iconstyle : {\n      color :\"#5A5E70\",\n      padding:\"2px\"\n    }\n  \n}));\n\nconst MenuWithStyle = withStyles(() => ({\n  paper: {\n    marginTop:\"40px\"\n  }\n}))(Menu);\n\nconst Hamburger = props => {\n  const classes = useStyles();\n  const { product,iconType, handleAction } = props;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleDelete = (actionType) => {\n    setAnchorEl(null);\n    handleAction(product,actionType);\n  }\n  const handleEdit = (actionType) => {\n    setAnchorEl(null);\n    handleAction(product,actionType);\n  }\n\n  return (\n    <React.Fragment>\n        <IconButton style={{padding:\"0px\",float:\"right\"}} onClick={handleClick}  >\n            {iconType}\n         </IconButton>\n         <MenuWithStyle\n            anchorEl={anchorEl}\n            open={open}\n            transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\"\n            }}\n            PopoverClasses={{\n                paper: classes.menu\n              }}\n            onClose={() => setAnchorEl(null)}\n        >\n            <MenuItem  \n                className={classes.menuI}\n                onClick={()=>{handleEdit(\"edit\")}} >\n               <EditIcon className={classes.iconstyle} /> <span style={{fontSize:\"1rem\",marginLeft:\"10px\"}}> Edit </span>\n            </MenuItem>\n            <MenuItem  \n                className={classes.menuI}\n                onClick={()=>{handleDelete(\"delete\")}} >\n                <DeleteIcon className={classes.iconstyle} /> <span style={{fontSize:\"1rem\",marginLeft:\"10px\"}}>Delete </span>\n            </MenuItem>\n        </MenuWithStyle>\n\n    </React.Fragment>\n  );\n};\n\nexport default Hamburger;\n","/home/naresh0101/Desktop/learning/inventory-management/src/components/modal/index.js",["86","87","88","89","90"],"import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\n  \nimport InputField from '../fields/inputfield';\nimport { Grid } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    fieldWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"98%\",\n        marginTop: \"10px\",\n      },\n    add: {\n        height: '30px',\n        backgroundColor: '#677BF2',\n        borderRadius: '10px',\n        color: '#ffffff',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: \"#5D6FDA\",\n        },\n        marginLeft: 10,\n    },\n    ofhidden:{\n        overflow:'hidden'\n      },\n    cancel: {\n        backgroundColor: 'transparent',\n        fontWeight: \"normal\",\n        color: 'black',\n        border: \"1px solid black\",\n        '&:hover': {\n            backgroundColor: \"#E9E9E9\",\n        },\n    },\n}))\n\n\nconst MuiDialogContentWithStyle = withStyles(() => ({\n    root:{\n      height: 'auto',\n      padding:\"0px !important\",\n    },\n  }))(MuiDialogContent);\n  \n  const DialogWithStyle = withStyles(() => ({\n    paper: {\n      borderRadius: \"10px\",\n      margin: \"10px !important\",\n      width: \"100%\",\n      top:40,\n      padding:\"26px !important\"\n    }\n  }))(Dialog);\n  \nconst DailogBox = (props) => {\n    const classes = useStyles()\n    const { open,handleOpen,formValues,ModalOpenFor, handleClose, handleInputValues, handleExpiry ,error} = props\n    const NotmobileView = useMediaQuery(\"(min-width:768px)\")\n    \n    return (\n        <div>\n            <DialogWithStyle\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n            >\n                <DialogTitle style={{padding:\"0px\"}}>{ModalOpenFor !=\"add\" ? \"Edit product\":\"Add new product\"}</DialogTitle>\n                <MuiDialogContentWithStyle className={classes.ofhidden} style={{height: NotmobileView ? 'auto':'66vh'}}>\n                    <Grid container spacing={2} display=\"flex\" alignItems=\"center\">\n                        <Grid item sm={12} className={classes.fieldWrapper}>\n                            <InputField\n                                name=\"batch_number\"\n                                label=\"Batch no. \"\n                                type=\"text\"\n                                size=\"small\"\n                                defaultValue={ModalOpenFor !=\"add\" ? formValues[\"batch_number\"]:\"\"}\n                                onChange={handleInputValues}\n                                error={error}\n                            />\n\n                        </Grid>\n                        <Grid item sm={12} className={classes.fieldWrapper}>\n                            <InputField\n                                name=\"f_comp\"\n                                label=\"F camp\"\n                                type=\"text\"\n                                size=\"small\"\n                                defaultValue={ModalOpenFor !=\"add\" ? formValues['f_comp']:\"\"}\n                                onChange={handleInputValues}\n                                error={error}\n                            />\n                        </Grid>\n                        <Grid item sm={12} className={classes.fieldWrapper}>\n                            <InputField\n                                name=\"MRP\"\n                                label=\"Price\"\n                                type=\"text\"\n                                size=\"small\"\n                                defaultValue={ModalOpenFor !=\"add\" ? formValues[\"MRP\"]:\"\"}\n                                onChange={handleInputValues}\n                                error={error}\n                            />\n                        </Grid>\n                        <Grid item sm={12} className={classes.fieldWrapper}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <KeyboardDatePicker\n                                    style={{ width: \"100%\" }}\n                                    disableToolbar\n                                    inputVariant=\"outlined\"\n                                    format=\"MM/dd/yyyy\"\n                                    margin=\"normal\"\n                                    label=\"Expiry date\"\n                                    size=\"small\"\n                                    value={formValues.expiry}\n                                    autoOk={true}\n                                    onChange={handleExpiry}\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                    </Grid>\n                </MuiDialogContentWithStyle>\n                <DialogActions>\n                    <Button autoFocus onClick={handleOpen} color=\"primary\">\n                        Cancel </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Add </Button>\n                </DialogActions>\n            </DialogWithStyle>\n        </div>\n    );\n}\n\nexport default DailogBox;\n","/home/naresh0101/Desktop/learning/inventory-management/src/components/fields/inputfield.js",["91","92"],"import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  underline: {\n    \"&&&:before\": {\n      border: 'none',\n      paddingLeft:\"10px !important\",\n      height:\"auto !important\",\n      width:\"100%\",\n    },\n    \"&&:after\": {\n      height:\"auto !important\",\n      width:\"100%\",\n      border: 'none', \n    },\n    styleInput :{\n      \".MuiFilledInput-input\":{\n        padding : \"20px 12px 10px !important\",\n      } \n    }\n  },\n  \n});\nconst InputField = (props) => {\n  const classes = useStyles();\n  const {label, name,error, ...rest} = props;\n  \n  return (\n    <React.Fragment>\n      <label htmlFor={name}>{label}</label>\n      <TextField\n        fullWidth\n        required\n        name={name}\n        style={{borderRadius:'6px',background: \"#F2F2F2\",width:\"100%\",\n        padding :\"7px\", \n        display: name === 'file' ? 'none' : 'default'\n      }}\n        InputProps={{ classes,disableUnderline:false  }}\n        {...rest}\n      />\n        {error != undefined && <Typography style={{fontSize: \"12px\"}} color=\"secondary\" >{error}</Typography> }     \n    </React.Fragment>\n  );\n};\n\n\nexport default InputField;","/home/naresh0101/Desktop/learning/inventory-management/src/components/alert.js",[],"/home/naresh0101/Desktop/learning/inventory-management/src/components/pageHeader.js",["93","94"],"import React, { Fragment, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { IconButton, useMediaQuery } from \"@material-ui/core\";\nimport SearchField from './search';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    paddingRight:\"0\"\n  },\n  appBar: {\n    marginLeft:\"0px\",\n    backgroundColor: \"#F2F2F2\",\n    boxShadow: \"none\",\n    color: '#000000',\n  },\n  title: {\n    verticalAlign: 'middle',\n    fontSize: '24px',\n    fontWeight: 500,\n    display: 'inline',\n  },\n  button: {\n    height: '48px',\n    backgroundColor: '#677BF2',\n    borderRadius: '10px',\n    color: '#ffffff',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: \"#5D6FDA\",\n    },\n    '&:disabled': {\n      backgroundColor: '#E9E9E9',\n      color: '#CDCDCD'\n    }\n  },\n  downloadButton: {\n    backgroundColor: 'transparent',\n    color: 'black',\n    border: \"1px solid black\",\n    '&:hover': {\n      backgroundColor: \"#E9E9E9\",\n    },\n    marginRight: 10,\n  },\n  circleBtn: {\n    background: \"#677BF2\",\n    color: '#ffffff',\n    right: \"1rem\",\n    bottom: \"1rem\",\n    position: \"fixed\",\n    zIndex: 1200\n  },\n  grid: {\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems:\"center\"\n    },\n    [theme.breakpoints.between(\"xs\", \"md\")]: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems:\"center\"\n    },\n  }\n}));\n\n\nconst PageHeader = (props) => {\n  const {searchProduct,handleAdd} = props\n  const NotMobileView = useMediaQuery(\"(min-width:768px)\")\n\n  const classes = useStyles();\n  const handleOnClick = () => {\n    handleAdd(\"actionType\");\n  }\n\n\n\n  return (\n    <Fragment>\n      {NotMobileView ? <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar} >\n          <Grid alignItems=\"flex-start\"\n            className={classes.grid} container>\n            <Grid item>\n              <SearchField searchProduct={searchProduct} />\n            </Grid>\n            <Grid item>\n            <Button className={classes.button} color=\"inherit\" onClick={handleOnClick}>\n                 <AddIcon /> New Product\n             </Button>\n            </Grid>\n          </Grid>\n        </AppBar>\n      </div>  : \n        <IconButton className={classes.circleBtn} color=\"inherit\" onClick={handleOnClick}>\n       < AddIcon />\n      </IconButton>\n       \n      }\n    </Fragment>\n  );\n}\n\nexport default PageHeader;","/home/naresh0101/Desktop/learning/inventory-management/src/components/search.js",["95"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport { setDate } from \"date-fns\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 350,\n    borderRadius:'30px'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  icon:{\n    paddingLeft : \"6px\"\n  }\n}));\n\nconst SearchField = (props)=>{\n  const {searchProduct} = props\n  const [seachfor, setSearchFor] = useState(null)\n  const classes = useStyles();\n  const handleOnChange = (e)=>{\n    const {value } = e.target;\n    setSearchFor(value)\n  }\n  const handleOnsubmite = (e)=>{\n    e.preventDefault()  \n    if(seachfor != null){\n      searchProduct(seachfor)\n    }\n  }\n  \n  return (\n    <form onSubmit={handleOnsubmite}>\n      <Paper className={classes.root} elevation={0}>\n       <SearchRoundedIcon />\n        <InputBase\n          name={\"searchfor\"}\n          onChange={handleOnChange}\n          className={classes.input}\n          placeholder=\"Search by batch no. or drug code \"\n        />\n      </Paper>\n    </form>\n  );\n}\n\nexport default SearchField;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":34,"column":17,"nodeType":"102","messageId":"103","endLine":34,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":91,"column":14,"nodeType":"106","messageId":"107","endLine":91,"endColumn":16},{"ruleId":"104","severity":1,"message":"108","line":92,"column":83,"nodeType":"106","messageId":"107","endLine":92,"endColumn":85},{"ruleId":"104","severity":1,"message":"108","line":92,"column":113,"nodeType":"106","messageId":"107","endLine":92,"endColumn":115},{"ruleId":"100","severity":1,"message":"109","line":161,"column":9,"nodeType":"102","messageId":"103","endLine":161,"endColumn":16},{"ruleId":"100","severity":1,"message":"110","line":162,"column":9,"nodeType":"102","messageId":"103","endLine":162,"endColumn":14},{"ruleId":"100","severity":1,"message":"111","line":164,"column":10,"nodeType":"102","messageId":"103","endLine":164,"endColumn":25},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":15,"column":6,"nodeType":"116","messageId":"107","endLine":15,"endColumn":12},{"ruleId":"100","severity":1,"message":"117","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":83,"column":68,"nodeType":"106","messageId":"107","endLine":83,"endColumn":70},{"ruleId":"104","severity":1,"message":"105","line":92,"column":60,"nodeType":"106","messageId":"107","endLine":92,"endColumn":62},{"ruleId":"104","severity":1,"message":"105","line":104,"column":60,"nodeType":"106","messageId":"107","endLine":104,"endColumn":62},{"ruleId":"104","severity":1,"message":"105","line":115,"column":60,"nodeType":"106","messageId":"107","endLine":115,"endColumn":62},{"ruleId":"100","severity":1,"message":"117","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":45,"column":16,"nodeType":"106","messageId":"107","endLine":45,"endColumn":18},{"ruleId":"100","severity":1,"message":"117","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":35},{"ruleId":"100","severity":1,"message":"118","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":18},{"ruleId":"100","severity":1,"message":"119","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":17},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'history' is assigned a value but never used.","'theme' is assigned a value but never used.","'OpenDefaultWith' is assigned a value but never used.",["120"],["121"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'useState' is defined but never used.","'Typography' is defined but never used.","'setDate' is defined but never used.","no-global-assign","no-unsafe-negation"]